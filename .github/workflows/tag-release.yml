name: Tag Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g., v0.2.0)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  get-tag:
    name: Get Release Tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
      should_release: ${{ steps.get_tag.outputs.should_release }}

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Get tag information
        id: get_tag
        run: |
          # Manual trigger with specific tag
          TAG="${{ inputs.tag }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "should_release=true" >> $GITHUB_OUTPUT
          echo "Manual release for tag: $TAG"

  release:
    name: Build and Release
    needs: [get-tag]
    if: needs.get-tag.outputs.should_release == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            arch: "aarch64"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            arch: "x86_64"
          - platform: "ubuntu-22.04"
            args: ""
            arch: "x86_64"
          - platform: "windows-latest"
            args: ""
            arch: "x86_64"

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout tag
        uses: actions/checkout@v5
        with:
          ref: ${{ needs.get-tag.outputs.tag }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm ci

      - name: Generate release notes
        id: release_notes
        run: |
          # Generate release notes from changelog using Node.js script
          RELEASE_NOTES=$(node scripts/github-utils.cjs release-notes)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ needs.get-tag.outputs.tag }}
          releaseName: "S3 Deck ${{ needs.get-tag.outputs.tag }}"
          releaseBody: ${{ steps.release_notes.outputs.RELEASE_NOTES || 'See [CHANGELOG.md](https://github.com/ODudek/s3deck/blob/main/CHANGELOG.md) for detailed changes.' }}
          releaseDraft: false
          prerelease: ${{ contains(needs.get-tag.outputs.tag, 'beta') || contains(needs.get-tag.outputs.tag, 'alpha') || contains(needs.get-tag.outputs.tag, 'rc') }}
          tauriScript: npx @tauri-apps/cli
          args: ${{ matrix.args }}
          includeUpdaterJson: false
