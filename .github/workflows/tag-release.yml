name: Tag Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  actions: write
  packages: write
  pull-requests: write

concurrency:
  group: tag-release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-release:
    name: Build and Release (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm ci

      - name: Get tag name and generate release notes
        id: tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/*/}
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

          # Extract version number from tag (remove 'v' prefix)
          VERSION=${TAG_NAME#v}

          # Generate release notes from changelog
          RELEASE_NOTES=$(npm run release-notes:version $VERSION --silent)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ steps.tag.outputs.TAG_NAME }}
          releaseName: "S3 Deck ${{ steps.tag.outputs.TAG_NAME }}"
          releaseBody: ${{ steps.tag.outputs.RELEASE_NOTES }}
          releaseDraft: false
          prerelease: false
          includeDebug: false
